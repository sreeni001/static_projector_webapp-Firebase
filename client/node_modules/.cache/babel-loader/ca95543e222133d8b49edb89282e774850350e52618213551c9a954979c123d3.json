{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreen\\\\Downloads\\\\static_projector-Firebase\\\\static_projector_webapp-Firebase\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8SGH4UFXfEegTpJlTIfTlw8oqWpAXc5s\",\n  authDomain: \"acceog-99589.firebaseapp.com\",\n  databaseURL: \"https://acceog-99589-default-rtdb.firebaseio.com\",\n  projectId: \"acceog-99589\",\n  storageBucket: \"acceog-99589.appspot.com\",\n  messagingSenderId: \"1076822396378\",\n  appId: \"1:1076822396378:web:71696715fcd346c66944e3\"\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\nfunction Dashboard(props) {\n  _s();\n  const db = getDatabase();\n  const [ProjectStatus, setProjectStatus] = useState({\n    status: \"ON\",\n    ClassId: \"LTC218\",\n    Name: \"Dr.Ezhiarasi\"\n  });\n  const [scrollTop, setScrollTop] = useState(0);\n  const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n  };\n\n  /* Dashboard List (will be used to get Data from Db and set)*/\n  const [DateList, selectDate] = useState(['Select Date', '24/10/2024', '25/10/2024', '26/10/2024']);\n  const [StaffList, selectStaff] = useState([]);\n  const [ClassAccessed, getClassAccessed] = useState([{\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }]);\n\n  /*selectedDate and Staff List used for showing the selected data */\n  const [selectedStaff, getSelectedStaff] = useState('Select Staff');\n  const [selectedDay, getSelectedDay] = useState('Date');\n\n  /*Classroom*/\n  const [classRoom, AvailableClassRoom] = useState([{\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }]);\n\n  /* Starting of Fetching Application details */\n  var classInfo;\n  var formattedDate;\n\n  //autolistening\n\n  const listenToAccessLogChanges = () => {\n    const accessLogRef = ref(db, 'AccessLog');\n\n    // Listen for new child added\n    onChildAdded(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"New entry added:\", logEntry);\n      fetchData(selectedDay, selectedStaff); // Ensure your log entry has the required fields\n    });\n\n    // Listen for updates to existing child\n    onChildChanged(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"Entry updated:\", logEntry);\n      fetchData(selectedDay, selectedStaff); // Ensure your log entry has the required fields\n    });\n  };\n\n  //end of autolitening\n\n  const fetchData = async (day, staff) => {\n    try {\n      console.log(\"fetch_Data:\", selectedDay, selectedStaff);\n      const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"staffName\": selectedStaff,\n          \"date\": selectedDay\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"REsponse...\");\n        console.log(result);\n        getClassAccessed(result);\n      } else {\n        console.error(\"Failed to access  staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    ClassinDb();\n    StaffinDb();\n  });\n  useEffect(() => {\n    fetchData(selectedStaff, selectedDay);\n  }, [selectedDay, selectedStaff]);\n  useEffect(() => {\n    listenToAccessLogChanges();\n  }, []);\n\n  //sub2 \n\n  const fetchClassDetails = async (Class, date) => {\n    console.log(Class);\n    console.log(date);\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"ClassId\": Class,\n          \"Date\": date\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setProjectStatus(result);\n      } else {\n        console.error(\"Failed to access  staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleClassClick = (Type, No) => {\n    const class_Name = Type;\n    const class_Id = No;\n    // ClassId : ClassId,\n    // Date : date,\n    // exitTime:exitTime,\n    classInfo = Type + No;\n    const currentDate = new Date();\n    console.log(\"Data collected...\");\n    const day = String(currentDate.getDate()).padStart(2, '0'); // Ensures two digits\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\n    const year = currentDate.getFullYear();\n    formattedDate = `${day}/${month}/${year}`;\n    fetchClassDetails(classInfo, toString(formattedDate));\n  };\n\n  //end of sub2\n\n  //ClassRoomsAvailable\n\n  const ClassinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n      if (response.ok) {\n        const result = await response.json();\n        AvailableClassRoom(result);\n      } else {\n        console.error(\"Failed to access  classroom available data\");\n      }\n    } catch (error) {\n      console.error(\"Error classroom availablr data:\", error);\n    }\n  };\n  const StaffinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/StaffList\");\n      if (response.ok) {\n        const result = await response.json();\n        selectStaff(result);\n      } else {\n        console.error(\"Failed to staff available data\");\n      }\n    } catch (error) {\n      console.error(\"Error classroom staff data:\", error);\n    }\n  };\n\n  /* Ending of Fetching Application Details*/\n  const DaySelected = e => {\n    getSelectedDay(e.target.value);\n    console.log(e.target.value);\n  };\n  const staffSelected = e => {\n    getSelectedStaff(e.target.value);\n    console.log(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.isvalidate == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectorCondition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"StatusBanner\",\n          children: \"Projector Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Status\",\n          children: ProjectStatus.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ID\",\n          children: [\"ID: \", ProjectStatus.ClassId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Name\",\n          children: [\"ID: \", ProjectStatus.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StaffOperations\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DaySelect\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDay,\n            onChange: DaySelected,\n            className: \"DayList\",\n            children: DateList.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: day,\n              value: day,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"StaffSearch\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStaff,\n            onChange: staffSelected,\n            className: \"StaffList\",\n            children: StaffList.map(staff => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: staff,\n              value: staff,\n              children: staff\n            }, staff, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AccessedClassList\",\n          style: {\n            maxHeight: '250px',\n            // Set the desired max height to control the vertical scroll area\n            overflowY: 'auto',\n            // Enable vertical scrolling\n            overflowX: 'hidden' // Hide horizontal scrollbar\n          },\n          children: ClassAccessed.map(classData => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ListofClass\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"classNames\",\n              children: classData.Class\n            }, classData.Class, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Time\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this), classData.Time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)]\n          }, classData.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Classrooms\",\n        style: {\n          maxHeight: '400px',\n          // Set the desired max height to control the vertical scroll area\n          overflowY: 'hidden',\n          // Enable vertical scrolling\n          overflowX: 'auto' // Hide horizontal scrollbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Sampletext\",\n          children: \"Classrooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"SampleQuote\",\n          children: \"\\u201CLearning is not limited to the classroom.\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classContainer\",\n          style: {\n            maxHeight: '400px',\n            maxWidth: '100%',\n            // Set the desired max height to control the vertical scroll area\n\n            overflowY: 'hidden',\n            // Disable vertical scrolling\n            overflowX: 'auto',\n            // Enable horizontal scrolling\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: classRoom.map(classes => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Classes\",\n            onClick: () => handleClassClick(classes.type, classes.no),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://www.svgrepo.com/download/109705/open-book.svg\",\n              className: \"bookimg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Type\",\n              children: classes.type\n            }, classes.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"No\",\n              children: classes.no\n            }, classes.no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Dashboard, \"sb008ePmR2WL6ihgVdtOyEwcc0o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getDatabase","ref","onChildAdded","onChildChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","db","Dashboard","props","_s","ProjectStatus","setProjectStatus","status","ClassId","Name","scrollTop","setScrollTop","handleScroll","event","currentTarget","DateList","selectDate","StaffList","selectStaff","ClassAccessed","getClassAccessed","Class","Time","selectedStaff","getSelectedStaff","selectedDay","getSelectedDay","classRoom","AvailableClassRoom","type","no","classInfo","formattedDate","listenToAccessLogChanges","accessLogRef","data","logEntry","val","console","log","fetchData","day","staff","response","fetch","method","headers","body","JSON","stringify","ok","result","json","error","ClassinDb","StaffinDb","fetchClassDetails","date","handleClassClick","Type","No","class_Name","class_Id","currentDate","Date","String","getDate","padStart","month","getMonth","year","getFullYear","toString","DaySelected","e","target","value","staffSelected","children","isvalidate","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","style","maxHeight","overflowY","overflowX","classData","src","height","width","maxWidth","display","flexDirection","classes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreen/Downloads/static_projector-Firebase/static_projector_webapp-Firebase/src/components/Dashboard.js"],"sourcesContent":["\nimport {React,useState,useEffect} from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC8SGH4UFXfEegTpJlTIfTlw8oqWpAXc5s\",\n    authDomain: \"acceog-99589.firebaseapp.com\",\n    databaseURL: \"https://acceog-99589-default-rtdb.firebaseio.com\",\n    projectId: \"acceog-99589\",\n    storageBucket: \"acceog-99589.appspot.com\",\n    messagingSenderId: \"1076822396378\",\n    appId: \"1:1076822396378:web:71696715fcd346c66944e3\",\n  };\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\n\nfunction Dashboard(props){\n    const db = getDatabase();\n    const [ProjectStatus,setProjectStatus]=useState({status:\"ON\",ClassId:\"LTC218\",Name:\"Dr.Ezhiarasi\"});\n\n    const [scrollTop, setScrollTop] = useState(0);\n\n      const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n    };\n\n    /* Dashboard List (will be used to get Data from Db and set)*/\n    const [DateList,selectDate] = useState(['Select Date','24/10/2024','25/10/2024','26/10/2024'])\n    const [StaffList,selectStaff]= useState([]);\n    const [ClassAccessed,getClassAccessed] = useState([{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'}])\n\n    /*selectedDate and Staff List used for showing the selected data */\n    const [selectedStaff,getSelectedStaff] = useState('Select Staff');\n    const [selectedDay,getSelectedDay] = useState('Date');\n\n     /*Classroom*/\n     const [classRoom,AvailableClassRoom] = useState([{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},])\n\n    /* Starting of Fetching Application details */\n    var classInfo;\n    var formattedDate;\n\n    //autolistening\n\n    const listenToAccessLogChanges = () => {\n        const accessLogRef = ref(db, 'AccessLog');\n\n        // Listen for new child added\n        onChildAdded(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"New entry added:\", logEntry);\n            fetchData(selectedDay,selectedStaff); // Ensure your log entry has the required fields\n        });\n\n        // Listen for updates to existing child\n        onChildChanged(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"Entry updated:\", logEntry);\n            fetchData(selectedDay,selectedStaff); // Ensure your log entry has the required fields\n        });\n    };\n\n\n    //end of autolitening\n\n\n\n    const fetchData = async(day,staff)=>{\n        try{\n            console.log(\"fetch_Data:\",selectedDay,selectedStaff);\n            const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\",{\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\"staffName\":selectedStaff,\n                    \"date\":selectedDay}),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                console.log(\"REsponse...\");\n                console.log(result);\n                getClassAccessed(result);\n            } else {\n                console.error(\"Failed to access  staff data\");\n              }\n\n        }\n        \n        catch(error){\n            console.error(\"Error fetching data:\", error);\n        }\n    }\n\n    useEffect(() => {\n        ClassinDb();\n        StaffinDb();\n        },);\n    \n    useEffect(() => {\n        fetchData(selectedStaff,selectedDay);\n            },[selectedDay,selectedStaff]);\n\n    useEffect(() => {\n                listenToAccessLogChanges();\n    }, []);\n\n    \n\n\n    //sub2 \n\n        const fetchClassDetails = async(Class,date)=>{\n            console.log(Class);\n            console.log(date);\n            try{\n    \n                const response = await fetch(\"http://localhost:4000/fetchClassLogs\",{\n                    method:\"POST\",\n                    headers:{\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                        \"ClassId\" : Class,\n                        \"Date\" :date,\n                    }),\n                });\n    \n                if (response.ok) {\n                    const result = await response.json();\n                    setProjectStatus(result);\n                } else {\n                    console.error(\"Failed to access  staff data\");\n                  }\n    \n            }\n            \n            catch(error){\n                console.error(\"Error fetching data:\", error);\n            }\n        }\n    \n\n\n        const handleClassClick = (Type,No)=>{\n            const class_Name = Type;\n            const class_Id = No;\n            // ClassId : ClassId,\n            // Date : date,\n            // exitTime:exitTime,\n            classInfo = Type+No;\n            const currentDate = new Date();\n            console.log(\"Data collected...\");\n            const day = String(currentDate.getDate()).padStart(2, '0'); // Ensures two digits\n            const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\n            const year = currentDate.getFullYear();\n           \n             formattedDate = `${day}/${month}/${year}`;\n            fetchClassDetails(classInfo,toString(formattedDate));\n\n        }\n\n\n    //end of sub2\n\n    //ClassRoomsAvailable\n\n    const ClassinDb = async ()=>{\n        try{\n\n            const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n\n            if (response.ok) {\n                const result = await response.json();\n                AvailableClassRoom(result);\n            } else {\n                console.error(\"Failed to access  classroom available data\");\n              }\n\n        }\n        \n        catch(error){\n            console.error(\"Error classroom availablr data:\", error);\n        }\n    }\n\n    const StaffinDb = async ()=>{\n        try{\n\n            const response = await fetch(\"http://localhost:4000/StaffList\");\n\n            if (response.ok) {\n                const result = await response.json();\n                selectStaff(result);\n            } else {\n                console.error(\"Failed to staff available data\");\n              }\n\n        }\n        \n        catch(error){\n            console.error(\"Error classroom staff data:\", error);\n        }\n    }\n    \n\n    /* Ending of Fetching Application Details*/\n    const DaySelected = (e)=>{\n        getSelectedDay(e.target.value);\n        console.log(e.target.value);\n         \n    } \n    const staffSelected =(e)=>{\n        getSelectedStaff(e.target.value);\n        console.log(e.target.value);\n \n    }\n      \n\n\n\n   \n\n    \n\n       return(\n     <>\n\n     {(props.isvalidate==true)? <div className='ContentHolder'>\n\n                <div className='ProjectorCondition'>\n                                <h1 className='StatusBanner'>Projector Status: </h1>\n                                <h1 className='Status'>{ProjectStatus.status}</h1>\n                                <p className='ID'>ID: {ProjectStatus.ClassId}</p>\n                                <p className='Name'>ID: {ProjectStatus.Name}</p>\n                </div>\n                <div className='StaffOperations'>\n                        <div className='DaySelect'>\n                        <select value={selectedDay} onChange={DaySelected}className='DayList'>\n                                {DateList.map((day) =>(<option id={day} key={day} value={day}>{day}</option>))}\n                            </select>\n                        </div>\n                        <div className='StaffSearch'>\n                            <select value={selectedStaff} onChange={staffSelected} className='StaffList'>\n                                {StaffList.map((staff) =>(<option id={staff} key={staff} value={staff}>{staff}</option>))}\n                            </select>\n                        </div>\n                        {/* <div className='AccessedClassList'>\n\n                        {ClassAccessed.map((classData) =>(\n                            <div className='ListofClass' ><span className='classNames'>{classData.Class}</span><span className='Time'>{classData.Time}</span></div>\n                        ))}\n\n                        </div> */}\n                        <div className=\"AccessedClassList\"\n                                 style={{\n                                 maxHeight: '250px', // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'auto',  // Enable vertical scrolling\n                                 overflowX: 'hidden', // Hide horizontal scrollbar\n                                }}>\n                                {ClassAccessed.map((classData) => (\n                                <div className=\"ListofClass\" key={classData.id}>\n                                <span className=\"classNames\" key={classData.Class}>{classData.Class}</span>\n                               \n                                <span className=\"Time\">\n                                    <img src='https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png' height='15px' width='15px'/>\n                                    <img src='https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png' height='15px' width='15px'/>\n                                    {classData.Time}</span>\n                                </div>\n                                 ))}\n                                </div>\n\n                        </div>\n                {/* Classroom Data */}\n                <div className='Classrooms' style={{\n                                 maxHeight: '400px', \n                               // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'hidden',  // Enable vertical scrolling\n                                 overflowX: 'auto', // Hide horizontal scrollbar\n                                }} >\n                        <p className='Sampletext'>Classrooms</p>\n                        <p className='SampleQuote'>“Learning is not limited to the classroom.”</p>\n                        <div className='classContainer' style={{\n                                 maxHeight: '400px',\n                                 maxWidth:'100%', \n                               // Set the desired max height to control the vertical scroll area\n                               \n                                 overflowY: 'hidden',  // Disable vertical scrolling\n                                 overflowX: 'auto',    // Enable horizontal scrolling\n                                 display: 'flex',\n                                 flexDirection: 'row',\n                                }}>\n                        {classRoom.map((classes) => (\n                            <div className=\"Classes\" onClick={()=>handleClassClick(classes.type, classes.no)}>\n                                <img src='https://www.svgrepo.com/download/109705/open-book.svg' className=\"bookimg\"/>\n                                <div className='Type' key={classes.type}>{classes.type}</div>\n                                <div className='No'key={classes.no}>{classes.no}</div>\n                            </div>\n                        ))}\n                        </div>\n                </div>\n\n      </div> \n      : <p>Data Loading...</p>\n      }\n     </>   \n    )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}