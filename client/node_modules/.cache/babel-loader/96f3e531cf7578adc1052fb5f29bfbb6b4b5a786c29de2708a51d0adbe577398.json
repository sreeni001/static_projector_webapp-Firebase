{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreen\\\\Downloads\\\\static_projector-Firebase\\\\static_projector_webapp-Firebase\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect, useRef } from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8SGH4UFXfEegTpJlTIfTlw8oqWpAXc5s\",\n  authDomain: \"acceog-99589.firebaseapp.com\",\n  databaseURL: \"https://acceog-99589-default-rtdb.firebaseio.com\",\n  projectId: \"acceog-99589\",\n  storageBucket: \"acceog-99589.appspot.com\",\n  messagingSenderId: \"1076822396378\",\n  appId: \"1:1076822396378:web:71696715fcd346c66944e3\"\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\nfunction Dashboard(props) {\n  _s();\n  const db = getDatabase();\n  const [ProjectStatus, setProjectStatus] = useState({\n    status: \"ON\",\n    ClassId: \"LTC218\",\n    Name: \"Dr.Ezhiarasi\"\n  });\n  const [scrollTop, setScrollTop] = useState(0);\n  const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n  };\n\n  /* Dashboard List (will be used to get Data from Db and set)*/\n  const [DateList, selectDate] = useState(['Select Date', '24/10/2024', '25/10/2024', '26/10/2024']);\n  const [StaffList, selectStaff] = useState([]);\n  const [ClassAccessed, getClassAccessed] = useState([{\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }, {\n    Class: 'LTC214',\n    Time: '11 am'\n  }]);\n\n  /*selectedDate and Staff List used for showing the selected data */\n  const [selectedStaff, getSelectedStaff] = useState('');\n  const [selectedDay, getSelectedDay] = useState('');\n\n  /*Classroom*/\n  const [classRoom, AvailableClassRoom] = useState([{\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }]);\n\n  /* Starting of Fetching Application details */\n  const selectedStaffRef = useRef(selectedStaff);\n  const selectedDayRef = useRef(selectedDay);\n  const classInfoRef = useRef(null);\n  const formattedDateRef = useRef(null);\n  const updateSelectedStaff = staff => {\n    getSelectedStaff(staff);\n    selectedStaffRef.current = staff; // Update ref\n  };\n  const updateSelectedDay = day => {\n    getSelectedDay(day);\n    selectedDayRef.current = day; // Update ref\n  };\n  const listenToAccessLogChanges = () => {\n    const accessLogRef = ref(db, 'AccessLog');\n    onChildAdded(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"New entry added:\", logEntry);\n      if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n        fetchData(selectedDayRef.current, selectedStaffRef.current);\n        fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n      }\n    });\n    onChildChanged(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"Entry updated:\", logEntry);\n      if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n        fetchData(selectedDayRef.current, selectedStaffRef.current);\n        fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n      }\n    });\n  };\n  const fetchData = async (day, staff) => {\n    try {\n      console.log(\"fetch_Data:\", day, staff);\n      const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"staffName\": staff,\n          \"date\": day\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"Response:\", result);\n        getClassAccessed(result);\n      } else {\n        console.error(\"Failed to access staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    ClassinDb();\n    StaffinDb();\n  }, []);\n  useEffect(() => {\n    if (selectedDay && selectedStaff) {\n      fetchData(selectedDay, selectedStaff);\n    }\n  }, [selectedDay, selectedStaff]);\n  useEffect(() => {\n    listenToAccessLogChanges();\n  }, []);\n  const fetchClassDetails = async (classId, date) => {\n    if (!classId || !date) return;\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          classId,\n          date\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setProjectStatus(result);\n      } else {\n        console.error(\"Failed to fetch class details\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching class details:\", error);\n    }\n  };\n  const handleClassClick = (Type, No) => {\n    const class_Name = Type + No;\n    classInfoRef.current = class_Name;\n    const currentDate = new Date();\n    const day = String(currentDate.getDate()).padStart(2, '0');\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n    const year = currentDate.getFullYear();\n    const formattedDate = `${day}/${month}/${year}`;\n    formattedDateRef.current = formattedDate;\n    fetchClassDetails(class_Name, formattedDate);\n  };\n  const ClassinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n      if (response.ok) {\n        const result = await response.json();\n        AvailableClassRoom(result);\n      } else {\n        console.error(\"Failed to access classroom data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error);\n    }\n  };\n  const StaffinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/StaffList\");\n      if (response.ok) {\n        const result = await response.json();\n        selectStaff(result);\n      } else {\n        console.error(\"Failed to access staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching staff data:\", error);\n    }\n  };\n  const DaySelected = e => {\n    updateSelectedDay(e.target.value);\n    console.log(e.target.value);\n  };\n  const staffSelected = e => {\n    updateSelectedStaff(e.target.value);\n    console.log(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.isvalidate == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectorCondition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"StatusBanner\",\n          children: \"Projector Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Status\",\n          children: ProjectStatus.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ID\",\n          children: [\"ID: \", ProjectStatus.ClassId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Name\",\n          children: [\"ID: \", ProjectStatus.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StaffOperations\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DaySelect\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDay,\n            onChange: DaySelected,\n            className: \"DayList\",\n            children: DateList.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: day,\n              value: day,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"StaffSearch\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStaff,\n            onChange: staffSelected,\n            className: \"StaffList\",\n            children: StaffList.map(staff => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: staff,\n              value: staff,\n              children: staff\n            }, staff, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AccessedClassList\",\n          style: {\n            maxHeight: '250px',\n            // Set the desired max height to control the vertical scroll area\n            overflowY: 'auto',\n            // Enable vertical scrolling\n            overflowX: 'hidden' // Hide horizontal scrollbar\n          },\n          children: ClassAccessed.map(classData => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ListofClass\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"classNames\",\n              children: classData.Class\n            }, classData.Class, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Time\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this), classData.Time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)]\n          }, classData.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Classrooms\",\n        style: {\n          maxHeight: '400px',\n          // Set the desired max height to control the vertical scroll area\n          overflowY: 'hidden',\n          // Enable vertical scrolling\n          overflowX: 'auto' // Hide horizontal scrollbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Sampletext\",\n          children: \"Classrooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"SampleQuote\",\n          children: \"\\u201CLearning is not limited to the classroom.\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classContainer\",\n          style: {\n            maxHeight: '400px',\n            maxWidth: '100%',\n            // Set the desired max height to control the vertical scroll area\n\n            overflowY: 'hidden',\n            // Disable vertical scrolling\n            overflowX: 'auto',\n            // Enable horizontal scrolling\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: classRoom.map(classes => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Classes\",\n            onClick: () => handleClassClick(classes.type, classes.no),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://www.svgrepo.com/download/109705/open-book.svg\",\n              className: \"bookimg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Type\",\n              children: classes.type\n            }, classes.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"No\",\n              children: classes.no\n            }, classes.no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Dashboard, \"TvnZkyRzpRVGf8NF5+j660UbFzw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getDatabase","ref","onChildAdded","onChildChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","db","Dashboard","props","_s","ProjectStatus","setProjectStatus","status","ClassId","Name","scrollTop","setScrollTop","handleScroll","event","currentTarget","DateList","selectDate","StaffList","selectStaff","ClassAccessed","getClassAccessed","Class","Time","selectedStaff","getSelectedStaff","selectedDay","getSelectedDay","classRoom","AvailableClassRoom","type","no","selectedStaffRef","selectedDayRef","classInfoRef","formattedDateRef","updateSelectedStaff","staff","current","updateSelectedDay","day","listenToAccessLogChanges","accessLogRef","data","logEntry","val","console","log","date","staffName","fetchData","fetchClassDetails","response","fetch","method","headers","body","JSON","stringify","ok","result","json","error","ClassinDb","StaffinDb","classId","handleClassClick","Type","No","class_Name","currentDate","Date","String","getDate","padStart","month","getMonth","year","getFullYear","formattedDate","DaySelected","e","target","value","staffSelected","children","isvalidate","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","style","maxHeight","overflowY","overflowX","classData","src","height","width","maxWidth","display","flexDirection","classes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreen/Downloads/static_projector-Firebase/static_projector_webapp-Firebase/src/components/Dashboard.js"],"sourcesContent":["\nimport {React,useState,useEffect,useRef} from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC8SGH4UFXfEegTpJlTIfTlw8oqWpAXc5s\",\n    authDomain: \"acceog-99589.firebaseapp.com\",\n    databaseURL: \"https://acceog-99589-default-rtdb.firebaseio.com\",\n    projectId: \"acceog-99589\",\n    storageBucket: \"acceog-99589.appspot.com\",\n    messagingSenderId: \"1076822396378\",\n    appId: \"1:1076822396378:web:71696715fcd346c66944e3\",\n  };\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\n\nfunction Dashboard(props){\n    const db = getDatabase();\n    const [ProjectStatus,setProjectStatus]=useState({status:\"ON\",ClassId:\"LTC218\",Name:\"Dr.Ezhiarasi\"});\n\n    const [scrollTop, setScrollTop] = useState(0);\n\n      const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n    };\n\n    /* Dashboard List (will be used to get Data from Db and set)*/\n    const [DateList,selectDate] = useState(['Select Date','24/10/2024','25/10/2024','26/10/2024'])\n    const [StaffList,selectStaff]= useState([]);\n    const [ClassAccessed,getClassAccessed] = useState([{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'}])\n\n    /*selectedDate and Staff List used for showing the selected data */\n    const [selectedStaff,getSelectedStaff] = useState('');\n    const [selectedDay,getSelectedDay] = useState('');\n\n     /*Classroom*/\n     const [classRoom,AvailableClassRoom] = useState([{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},])\n\n    /* Starting of Fetching Application details */\n    const selectedStaffRef = useRef(selectedStaff);\n    const selectedDayRef = useRef(selectedDay);\n\n\n    const classInfoRef = useRef(null);\n    const formattedDateRef = useRef(null);\n\n    const updateSelectedStaff = (staff) => {\n        getSelectedStaff(staff);\n        selectedStaffRef.current = staff; // Update ref\n    };\n\n    const updateSelectedDay = (day) => {\n        getSelectedDay(day);\n        selectedDayRef.current = day; // Update ref\n    };\n\n    const listenToAccessLogChanges = () => {\n        const accessLogRef = ref(db, 'AccessLog');\n\n        onChildAdded(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"New entry added:\", logEntry);\n            if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n                fetchData(selectedDayRef.current, selectedStaffRef.current);\n                fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n            }\n        });\n\n        onChildChanged(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"Entry updated:\", logEntry);\n            if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n                fetchData(selectedDayRef.current, selectedStaffRef.current);\n                fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n            }\n        });\n    };\n\n    const fetchData = async (day, staff) => {\n        try {\n            console.log(\"fetch_Data:\", day, staff);\n            const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ \"staffName\": staff, \"date\": day }),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                console.log(\"Response:\", result);\n                getClassAccessed(result);\n            } else {\n                console.error(\"Failed to access staff data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        ClassinDb();\n        StaffinDb();\n    }, []);\n\n    useEffect(() => {\n        if (selectedDay && selectedStaff) {\n            fetchData(selectedDay, selectedStaff);\n        }\n    }, [selectedDay, selectedStaff]);\n\n    useEffect(() => {\n        listenToAccessLogChanges();\n    }, []);\n\n    const fetchClassDetails = async (classId, date) => {\n        if (!classId || !date) return;\n\n        try {\n            const response = await fetch(\"http://localhost:4000/fetchClassLogs\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ classId, date }),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                setProjectStatus(result);\n            } else {\n                console.error(\"Failed to fetch class details\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching class details:\", error);\n        }\n    };\n\n    const handleClassClick = (Type, No) => {\n        const class_Name = Type + No;\n        classInfoRef.current = class_Name;\n        const currentDate = new Date();\n        const day = String(currentDate.getDate()).padStart(2, '0');\n        const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n        const year = currentDate.getFullYear();\n        const formattedDate = `${day}/${month}/${year}`;\n        formattedDateRef.current = formattedDate;\n\n        fetchClassDetails(class_Name, formattedDate);\n    };\n\n    const ClassinDb = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n            if (response.ok) {\n                const result = await response.json();\n                AvailableClassRoom(result);\n            } else {\n                console.error(\"Failed to access classroom data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching classroom data:\", error);\n        }\n    };\n\n    const StaffinDb = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/StaffList\");\n            if (response.ok) {\n                const result = await response.json();\n                selectStaff(result);\n            } else {\n                console.error(\"Failed to access staff data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching staff data:\", error);\n        }\n    };\n\n    const DaySelected = (e) => {\n        updateSelectedDay(e.target.value);\n        console.log(e.target.value);\n    };\n\n    const staffSelected = (e) => {\n        updateSelectedStaff(e.target.value);\n        console.log(e.target.value);\n    };\n\n       return(\n     <>\n\n     {(props.isvalidate==true)? <div className='ContentHolder'>\n\n                <div className='ProjectorCondition'>\n                                <h1 className='StatusBanner'>Projector Status: </h1>\n                                <h1 className='Status'>{ProjectStatus.status}</h1>\n                                <p className='ID'>ID: {ProjectStatus.ClassId}</p>\n                                <p className='Name'>ID: {ProjectStatus.Name}</p>\n                </div>\n                <div className='StaffOperations'>\n                        <div className='DaySelect'>\n                        <select value={selectedDay} onChange={DaySelected}className='DayList'>\n                                {DateList.map((day) =>(<option id={day} key={day} value={day}>{day}</option>))}\n                            </select>\n                        </div>\n                        <div className='StaffSearch'>\n                            <select value={selectedStaff} onChange={staffSelected} className='StaffList'>\n                                {StaffList.map((staff) =>(<option id={staff} key={staff} value={staff}>{staff}</option>))}\n                            </select>\n                        </div>\n                        {/* <div className='AccessedClassList'>\n\n                        {ClassAccessed.map((classData) =>(\n                            <div className='ListofClass' ><span className='classNames'>{classData.Class}</span><span className='Time'>{classData.Time}</span></div>\n                        ))}\n\n                        </div> */}\n                        <div className=\"AccessedClassList\"\n                                 style={{\n                                 maxHeight: '250px', // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'auto',  // Enable vertical scrolling\n                                 overflowX: 'hidden', // Hide horizontal scrollbar\n                                }}>\n                                {ClassAccessed.map((classData) => (\n                                <div className=\"ListofClass\" key={classData.id}>\n                                <span className=\"classNames\" key={classData.Class}>{classData.Class}</span>\n                               \n                                <span className=\"Time\">\n                                    <img src='https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png' height='15px' width='15px'/>\n                                    <img src='https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png' height='15px' width='15px'/>\n                                    {classData.Time}</span>\n                                </div>\n                                 ))}\n                                </div>\n\n                        </div>\n                {/* Classroom Data */}\n                <div className='Classrooms' style={{\n                                 maxHeight: '400px', \n                               // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'hidden',  // Enable vertical scrolling\n                                 overflowX: 'auto', // Hide horizontal scrollbar\n                                }} >\n                        <p className='Sampletext'>Classrooms</p>\n                        <p className='SampleQuote'>“Learning is not limited to the classroom.”</p>\n                        <div className='classContainer' style={{\n                                 maxHeight: '400px',\n                                 maxWidth:'100%', \n                               // Set the desired max height to control the vertical scroll area\n                               \n                                 overflowY: 'hidden',  // Disable vertical scrolling\n                                 overflowX: 'auto',    // Enable horizontal scrolling\n                                 display: 'flex',\n                                 flexDirection: 'row',\n                                }}>\n                        {classRoom.map((classes) => (\n                            <div className=\"Classes\" onClick={()=>handleClassClick(classes.type, classes.no)}>\n                                <img src='https://www.svgrepo.com/download/109705/open-book.svg' className=\"bookimg\"/>\n                                <div className='Type' key={classes.type}>{classes.type}</div>\n                                <div className='No'key={classes.no}>{classes.no}</div>\n                            </div>\n                        ))}\n                        </div>\n                </div>\n\n      </div> \n      : <p>Data Loading...</p>\n      }\n     </>   \n    )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}