{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreen\\\\Downloads\\\\static_projector-Firebase\\\\static_projector_webapp-Firebase\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect, useRef } from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: REACT_APP_api_Key,\n  authDomain: REACT_APP_process.env.auth_Domain,\n  databaseURL: REACT_APP_process.env.database_URL,\n  projectId: process.env.project_Id,\n  storageBucket: process.env.storage_Bucket,\n  messagingSenderId: process.env.messaging_SenderId,\n  appId: process.env.app_Id\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\nfunction Dashboard(props) {\n  _s();\n  const db = getDatabase();\n  const [ProjectStatus, setProjectStatus] = useState({\n    status: \"OFF\",\n    ClassId: \"NIL\",\n    Name: \"NIL\"\n  });\n  const [scrollTop, setScrollTop] = useState(0);\n  const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n  };\n\n  /* Dashboard List (will be used to get Data from Db and set)*/\n  const [DateList, selectDate] = useState(['Select Date', '24/10/2024', '25/10/2024', '26/10/2024']);\n  const [StaffList, selectStaff] = useState([]);\n  const [ClassAccessed, getClassAccessed] = useState([]);\n  //{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'} \n\n  /*selectedDate and Staff List used for showing the selected data */\n  const [selectedStaff, getSelectedStaff] = useState('');\n  const [selectedDay, getSelectedDay] = useState('');\n\n  /*Classroom*/\n  const [classRoom, AvailableClassRoom] = useState([{\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }, {\n    type: \"LTC\",\n    no: \"214\"\n  }]);\n\n  /* Starting of Fetching Application details */\n  const selectedStaffRef = useRef(selectedStaff);\n  const selectedDayRef = useRef(selectedDay);\n  const classInfoRef = useRef(null);\n  const formattedDateRef = useRef(null);\n  const updateSelectedStaff = staff => {\n    getSelectedStaff(staff);\n    selectedStaffRef.current = staff; // Update ref\n  };\n  const updateSelectedDay = day => {\n    getSelectedDay(day);\n    selectedDayRef.current = day; // Update ref\n  };\n  const listenToAccessLogChanges_2 = () => {\n    const accessLogRef = ref(db, 'AccessLog');\n    onChildAdded(accessLogRef, () => {\n      console.log(\"New AccessLog entry added.\");\n      fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n    });\n    onChildChanged(accessLogRef, () => {\n      console.log(\"AccessLog entry updated.\");\n      fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n    });\n  };\n  const listenToAccessLogChanges = () => {\n    const accessLogRef = ref(db, 'AccessLog');\n    onChildAdded(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"New entry added:\", logEntry);\n      if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n        fetchData(selectedDayRef.current, selectedStaffRef.current);\n      }\n    });\n    onChildChanged(accessLogRef, data => {\n      const logEntry = data.val();\n      console.log(\"Entry updated:\", logEntry);\n      if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n        fetchData(selectedDayRef.current, selectedStaffRef.current);\n      }\n    });\n  };\n  const fetchData = async (day, staff) => {\n    try {\n      console.log(\"fetch_Data:\", day, staff);\n      const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"staffName\": staff,\n          \"date\": day\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"Response:\", result);\n        getClassAccessed(result);\n      } else {\n        console.error(\"Failed to access staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    ClassinDb();\n    StaffinDb();\n  }, []);\n  useEffect(() => {\n    if (selectedDay && selectedStaff) {\n      fetchData(selectedDay, selectedStaff);\n    }\n  }, [selectedDay, selectedStaff]);\n  useEffect(() => {\n    listenToAccessLogChanges();\n    listenToAccessLogChanges_2();\n  }, []);\n  const fetchClassDetails = async (classId, date) => {\n    if (!classId || !date) return;\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassLogs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          classId,\n          date\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setProjectStatus(result);\n      } else {\n        console.error(\"Failed to fetch class details\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching class details:\", error);\n    }\n  };\n  const handleClassClick = (Type, No) => {\n    const class_Name = Type + No;\n    classInfoRef.current = class_Name;\n    const currentDate = new Date();\n    const day = String(currentDate.getDate()).padStart(2, '0');\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n    const year = currentDate.getFullYear();\n    const formattedDate = `${day}/${month}/${year}`;\n    formattedDateRef.current = formattedDate.toString();\n    console.log(class_Name, formattedDate.toString());\n    fetchClassDetails(class_Name, formattedDate.toString());\n  };\n  const ClassinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n      if (response.ok) {\n        const result = await response.json();\n        AvailableClassRoom(result);\n      } else {\n        console.error(\"Failed to access classroom data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error);\n    }\n  };\n  const StaffinDb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/StaffList\");\n      if (response.ok) {\n        const result = await response.json();\n        selectStaff(result);\n      } else {\n        console.error(\"Failed to access staff data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching staff data:\", error);\n    }\n  };\n  const DaySelected = e => {\n    updateSelectedDay(e.target.value);\n    console.log(e.target.value);\n  };\n  const staffSelected = e => {\n    updateSelectedStaff(e.target.value);\n    console.log(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.isvalidate == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectorCondition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"StatusBanner\",\n          children: \"Projector Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Status\",\n          children: ProjectStatus.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ID\",\n          children: [\"ID: \", ProjectStatus.ClassId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Name\",\n          children: [\"ID: \", ProjectStatus.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StaffOperations\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DaySelect\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDay,\n            onChange: DaySelected,\n            className: \"DayList\",\n            children: DateList.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: day,\n              value: day,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"StaffSearch\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedStaff,\n            onChange: staffSelected,\n            className: \"StaffList\",\n            children: StaffList.map(staff => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: staff,\n              value: staff,\n              children: staff\n            }, staff, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AccessedClassList\",\n          style: {\n            maxHeight: '250px',\n            // Set the desired max height to control the vertical scroll area\n            overflowY: 'auto',\n            // Enable vertical scrolling\n            overflowX: 'hidden' // Hide horizontal scrollbar\n          },\n          children: ClassAccessed.map(classData => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ListofClass\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"classNames\",\n              children: classData.Class\n            }, classData.Class, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Time\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png\",\n                height: \"15px\",\n                width: \"15px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), classData.Time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)]\n          }, classData.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Classrooms\",\n        style: {\n          maxHeight: '400px',\n          // Set the desired max height to control the vertical scroll area\n          overflowY: 'hidden',\n          // Enable vertical scrolling\n          overflowX: 'auto' // Hide horizontal scrollbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Sampletext\",\n          children: \"Classrooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"SampleQuote\",\n          children: \"\\u201CLearning is not limited to the classroom.\\u201D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classContainer\",\n          style: {\n            maxHeight: '400px',\n            maxWidth: '100%',\n            // Set the desired max height to control the vertical scroll area\n\n            overflowY: 'hidden',\n            // Disable vertical scrolling\n            overflowX: 'auto',\n            // Enable horizontal scrolling\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: classRoom.map(classes => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Classes\",\n            onClick: () => handleClassClick(classes.type, classes.no),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://www.svgrepo.com/download/109705/open-book.svg\",\n              className: \"bookimg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Type\",\n              children: classes.type\n            }, classes.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"No\",\n              children: classes.no\n            }, classes.no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Dashboard, \"D9kxbLcslgGGk272FHfIMNGjVu8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getDatabase","ref","onChildAdded","onChildChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","apiKey","REACT_APP_api_Key","authDomain","REACT_APP_process","env","auth_Domain","databaseURL","database_URL","projectId","process","project_Id","storageBucket","storage_Bucket","messagingSenderId","messaging_SenderId","appId","app_Id","app","db","Dashboard","props","_s","ProjectStatus","setProjectStatus","status","ClassId","Name","scrollTop","setScrollTop","handleScroll","event","currentTarget","DateList","selectDate","StaffList","selectStaff","ClassAccessed","getClassAccessed","selectedStaff","getSelectedStaff","selectedDay","getSelectedDay","classRoom","AvailableClassRoom","type","no","selectedStaffRef","selectedDayRef","classInfoRef","formattedDateRef","updateSelectedStaff","staff","current","updateSelectedDay","day","listenToAccessLogChanges_2","accessLogRef","console","log","fetchClassDetails","listenToAccessLogChanges","data","logEntry","val","date","staffName","fetchData","response","fetch","method","headers","body","JSON","stringify","ok","result","json","error","ClassinDb","StaffinDb","classId","handleClassClick","Type","No","class_Name","currentDate","Date","String","getDate","padStart","month","getMonth","year","getFullYear","formattedDate","toString","DaySelected","e","target","value","staffSelected","children","isvalidate","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","style","maxHeight","overflowY","overflowX","classData","Class","src","height","width","Time","maxWidth","display","flexDirection","classes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreen/Downloads/static_projector-Firebase/static_projector_webapp-Firebase/src/components/Dashboard.js"],"sourcesContent":["\nimport {React,useState,useEffect,useRef} from 'react';\nimport './cssfiles/Dashboard.css';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onChildAdded, onChildChanged } from 'firebase/database';\nconst firebaseConfig = {\n    apiKey: REACT_APP_api_Key,\n    authDomain:REACT_APP_process.env.auth_Domain,\n    databaseURL:REACT_APP_process.env.database_URL,\n    projectId:process.env.project_Id,\n    storageBucket:process.env.storage_Bucket,\n    messagingSenderId:process.env.messaging_SenderId,\n    appId:process.env.app_Id,\n  };\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database\nconst db = getDatabase(app);\n\nfunction Dashboard(props){\n    const db = getDatabase();\n    const [ProjectStatus,setProjectStatus]=useState({status:\"OFF\",ClassId:\"NIL\",Name:\"NIL\"});\n\n    const [scrollTop, setScrollTop] = useState(0);\n\n      const handleScroll = event => {\n    setScrollTop(event.currentTarget.scrollTop);\n    };\n\n    /* Dashboard List (will be used to get Data from Db and set)*/\n    const [DateList,selectDate] = useState(['Select Date','24/10/2024','25/10/2024','26/10/2024'])\n    const [StaffList,selectStaff]= useState([]);\n    const [ClassAccessed,getClassAccessed] = useState([]);\n    //{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'},{Class:'LTC214',Time:'11 am'} \n\n    /*selectedDate and Staff List used for showing the selected data */\n    const [selectedStaff,getSelectedStaff] = useState('');\n    const [selectedDay,getSelectedDay] = useState('');\n\n     /*Classroom*/\n     const [classRoom,AvailableClassRoom] = useState([{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},{type:\"LTC\",no:\"214\"},])\n\n    /* Starting of Fetching Application details */\n    const selectedStaffRef = useRef(selectedStaff);\n    const selectedDayRef = useRef(selectedDay);\n\n\n    const classInfoRef = useRef(null);\n    const formattedDateRef = useRef(null);\n\n    const updateSelectedStaff = (staff) => {\n        getSelectedStaff(staff);\n        selectedStaffRef.current = staff; // Update ref\n    };\n\n    const updateSelectedDay = (day) => {\n        getSelectedDay(day);\n        selectedDayRef.current = day; // Update ref\n    };\n    \n    const listenToAccessLogChanges_2 = () => {\n        const accessLogRef = ref(db, 'AccessLog');\n\n        onChildAdded(accessLogRef, () => {\n            console.log(\"New AccessLog entry added.\");\n            fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n        });\n\n        onChildChanged(accessLogRef, () => {\n            console.log(\"AccessLog entry updated.\");\n            fetchClassDetails(classInfoRef.current, formattedDateRef.current);\n        });\n    };\n\n    const listenToAccessLogChanges = () => {\n        const accessLogRef = ref(db, 'AccessLog');\n\n        onChildAdded(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"New entry added:\", logEntry);\n            if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n                fetchData(selectedDayRef.current, selectedStaffRef.current);\n            }\n        });\n\n        onChildChanged(accessLogRef, (data) => {\n            const logEntry = data.val();\n            console.log(\"Entry updated:\", logEntry);\n            if (logEntry.date === selectedDayRef.current && logEntry.staffName === selectedStaffRef.current) {\n                fetchData(selectedDayRef.current, selectedStaffRef.current);\n            }\n        });\n    };\n\n    const fetchData = async (day, staff) => {\n        try {\n            console.log(\"fetch_Data:\", day, staff);\n            const response = await fetch(\"http://localhost:4000/fetchTeacherLogs\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ \"staffName\": staff, \"date\": day }),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                console.log(\"Response:\", result);\n                getClassAccessed(result);\n            } else {\n                console.error(\"Failed to access staff data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        ClassinDb();\n        StaffinDb();\n    }, []);\n\n    useEffect(() => {\n        if (selectedDay && selectedStaff) {\n            fetchData(selectedDay, selectedStaff);\n        }\n    }, [selectedDay, selectedStaff]);\n\n    useEffect(() => {\n        listenToAccessLogChanges();\n        listenToAccessLogChanges_2();\n    }, []);\n\n    const fetchClassDetails = async (classId, date) => {\n        if (!classId || !date) return;\n\n        try {\n            const response = await fetch(\"http://localhost:4000/fetchClassLogs\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ classId, date }),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                setProjectStatus(result);\n            } else {\n                console.error(\"Failed to fetch class details\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching class details:\", error);\n        }\n    };\n\n    const handleClassClick = (Type, No) => {\n        const class_Name = Type + No;\n        classInfoRef.current = class_Name;\n        const currentDate = new Date();\n        const day = String(currentDate.getDate()).padStart(2, '0');\n        const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n        const year = currentDate.getFullYear();\n        const formattedDate = `${day}/${month}/${year}`;\n        formattedDateRef.current = formattedDate.toString();\n        console.log(class_Name,formattedDate.toString())\n        fetchClassDetails(class_Name, formattedDate.toString());\n    };\n\n    const ClassinDb = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/fetchClassrooms\");\n            if (response.ok) {\n                const result = await response.json();\n                AvailableClassRoom(result);\n            } else {\n                console.error(\"Failed to access classroom data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching classroom data:\", error);\n        }\n    };\n\n    const StaffinDb = async () => {\n        try {\n            const response = await fetch(\"http://localhost:4000/StaffList\");\n            if (response.ok) {\n                const result = await response.json();\n                selectStaff(result);\n            } else {\n                console.error(\"Failed to access staff data\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching staff data:\", error);\n        }\n    };\n\n    const DaySelected = (e) => {\n        updateSelectedDay(e.target.value);\n        console.log(e.target.value);\n    };\n\n    const staffSelected = (e) => {\n        updateSelectedStaff(e.target.value);\n        console.log(e.target.value);\n    };\n\n       return(\n     <>\n\n     {(props.isvalidate==true)? <div className='ContentHolder'>\n\n                <div className='ProjectorCondition'>\n                                <h1 className='StatusBanner'>Projector Status: </h1>\n                                <h1 className='Status'>{ProjectStatus.status}</h1>\n                                <p className='ID'>ID: {ProjectStatus.ClassId}</p>\n                                <p className='Name'>ID: {ProjectStatus.Name}</p>\n                </div>\n                <div className='StaffOperations'>\n                        <div className='DaySelect'>\n                        <select value={selectedDay} onChange={DaySelected}className='DayList'>\n                                {DateList.map((day) =>(<option id={day} key={day} value={day}>{day}</option>))}\n                            </select>\n                        </div>\n                        <div className='StaffSearch'>\n                            <select value={selectedStaff} onChange={staffSelected} className='StaffList'>\n                                {StaffList.map((staff) =>(<option id={staff} key={staff} value={staff}>{staff}</option>))}\n                            </select>\n                        </div>\n                        {/* <div className='AccessedClassList'>\n\n                        {ClassAccessed.map((classData) =>(\n                            <div className='ListofClass' ><span className='classNames'>{classData.Class}</span><span className='Time'>{classData.Time}</span></div>\n                        ))}\n\n                        </div> */}\n                        <div className=\"AccessedClassList\"\n                                 style={{\n                                 maxHeight: '250px', // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'auto',  // Enable vertical scrolling\n                                 overflowX: 'hidden', // Hide horizontal scrollbar\n                                }}>\n                                {ClassAccessed.map((classData) => (\n                                <div className=\"ListofClass\" key={classData.id}>\n                                <span className=\"classNames\" key={classData.Class}>{classData.Class}</span>\n                               \n                                <span className=\"Time\">\n                                    <img src='https://cdn2.iconfinder.com/data/icons/inverticons-stroke-vol-4/32/connection_signal_full_internet_phone-512.png' height='15px' width='15px'/>\n                                    <img src='https://www.pngarts.com/files/4/Black-Wifi-Logo-Transparent-Images-279x279.png' height='15px' width='15px'/>\n                                    {classData.Time}</span>\n                                </div>\n                                 ))}\n                                </div>\n\n                        </div>\n                {/* Classroom Data */}\n                <div className='Classrooms' style={{\n                                 maxHeight: '400px', \n                               // Set the desired max height to control the vertical scroll area\n                                 overflowY: 'hidden',  // Enable vertical scrolling\n                                 overflowX: 'auto', // Hide horizontal scrollbar\n                                }} >\n                        <p className='Sampletext'>Classrooms</p>\n                        <p className='SampleQuote'>“Learning is not limited to the classroom.”</p>\n                        <div className='classContainer' style={{\n                                 maxHeight: '400px',\n                                 maxWidth:'100%', \n                               // Set the desired max height to control the vertical scroll area\n                               \n                                 overflowY: 'hidden',  // Disable vertical scrolling\n                                 overflowX: 'auto',    // Enable horizontal scrolling\n                                 display: 'flex',\n                                 flexDirection: 'row',\n                                }}>\n                        {classRoom.map((classes) => (\n                            <div className=\"Classes\" onClick={()=>handleClassClick(classes.type, classes.no)}>\n                                <img src='https://www.svgrepo.com/download/109705/open-book.svg' className=\"bookimg\"/>\n                                <div className='Type' key={classes.type}>{classes.type}</div>\n                                <div className='No'key={classes.no}>{classes.no}</div>\n                            </div>\n                        ))}\n                        </div>\n                </div>\n\n      </div> \n      : <p>Data Loading...</p>\n      }\n     </>   \n    )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}